{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "O5l61wAeAovF"
      },
      "source": [
        "# Final NoteBook Submission"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ACla_ZX9AovH"
      },
      "source": [
        "Name : Muskan Gupta , House : Denver , Roll No. 1705706"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7SbHjzMKAovI"
      },
      "source": [
        "Week 2,Day 1 Assignment"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "XvinpAIVAovI"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "uPSJQFTRAovI"
      },
      "outputs": [],
      "source": [
        "import seaborn as sns\n",
        "import matplotlib as mpl\n",
        "import matplotlib.pyplot as plt"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "aLUoqe6pAovJ"
      },
      "outputs": [],
      "source": [
        "use_case=pd.read_csv(r\"C:\\Users\\KIIT\\Desktop\\Document\\Highradius summer internship\\Day3\\Denver_1705706.csv\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "WbE9NT0iAovJ",
        "outputId": "12c75849-e02e-4497-fb39-3c21cd6eff1e"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>acct_doc_header_id</th>\n",
              "      <th>company_id</th>\n",
              "      <th>doc_number</th>\n",
              "      <th>doc_number_norm</th>\n",
              "      <th>business_code</th>\n",
              "      <th>create_year</th>\n",
              "      <th>document_line_number</th>\n",
              "      <th>document_type</th>\n",
              "      <th>cust_number</th>\n",
              "      <th>cust_number_norm</th>\n",
              "      <th>...</th>\n",
              "      <th>debit_credit_status</th>\n",
              "      <th>payment_method</th>\n",
              "      <th>document_create_date.1</th>\n",
              "      <th>invoice_currency</th>\n",
              "      <th>doc_id</th>\n",
              "      <th>actual_outstanding_amount</th>\n",
              "      <th>payment_amount</th>\n",
              "      <th>days_past_duedate</th>\n",
              "      <th>age_invoice</th>\n",
              "      <th>dispute_amount</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <td>0</td>\n",
              "      <td>533998569</td>\n",
              "      <td>60</td>\n",
              "      <td>31820283</td>\n",
              "      <td>31820283</td>\n",
              "      <td>body5</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>RI</td>\n",
              "      <td>218998</td>\n",
              "      <td>218998</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>9730.04</td>\n",
              "      <td>533998569</td>\n",
              "      <td>9730.04</td>\n",
              "      <td>9730.04</td>\n",
              "      <td>0</td>\n",
              "      <td>60</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>1</td>\n",
              "      <td>544514161</td>\n",
              "      <td>60</td>\n",
              "      <td>49276491</td>\n",
              "      <td>49276491</td>\n",
              "      <td>pier9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>RI</td>\n",
              "      <td>218994</td>\n",
              "      <td>218994</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2476.56</td>\n",
              "      <td>544514161</td>\n",
              "      <td>2476.56</td>\n",
              "      <td>2476.56</td>\n",
              "      <td>2</td>\n",
              "      <td>62</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>2</td>\n",
              "      <td>532638486</td>\n",
              "      <td>60</td>\n",
              "      <td>29962466</td>\n",
              "      <td>29962466</td>\n",
              "      <td>HYON10</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>RI</td>\n",
              "      <td>228140</td>\n",
              "      <td>228140</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>23511.09</td>\n",
              "      <td>532638486</td>\n",
              "      <td>23511.09</td>\n",
              "      <td>23511.09</td>\n",
              "      <td>40</td>\n",
              "      <td>100</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>3</td>\n",
              "      <td>540260006</td>\n",
              "      <td>60</td>\n",
              "      <td>40406910</td>\n",
              "      <td>40406910</td>\n",
              "      <td>Piat8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>RI</td>\n",
              "      <td>219001</td>\n",
              "      <td>219001</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>996.65</td>\n",
              "      <td>540260006</td>\n",
              "      <td>996.65</td>\n",
              "      <td>996.65</td>\n",
              "      <td>-1</td>\n",
              "      <td>59</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>4</td>\n",
              "      <td>536751412</td>\n",
              "      <td>60</td>\n",
              "      <td>35707280</td>\n",
              "      <td>35707280</td>\n",
              "      <td>wart8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>RI</td>\n",
              "      <td>228090</td>\n",
              "      <td>228090</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>19.90</td>\n",
              "      <td>536751412</td>\n",
              "      <td>19.90</td>\n",
              "      <td>19.90</td>\n",
              "      <td>-1</td>\n",
              "      <td>59</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows Ã— 47 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "   acct_doc_header_id  company_id  doc_number  doc_number_norm business_code  \\\n",
              "0           533998569          60    31820283         31820283         body5   \n",
              "1           544514161          60    49276491         49276491         pier9   \n",
              "2           532638486          60    29962466         29962466        HYON10   \n",
              "3           540260006          60    40406910         40406910         Piat8   \n",
              "4           536751412          60    35707280         35707280         wart8   \n",
              "\n",
              "   create_year  document_line_number document_type  cust_number  \\\n",
              "0          NaN                   NaN            RI       218998   \n",
              "1          NaN                   NaN            RI       218994   \n",
              "2          NaN                   NaN            RI       228140   \n",
              "3          NaN                   NaN            RI       219001   \n",
              "4          NaN                   NaN            RI       228090   \n",
              "\n",
              "   cust_number_norm  ...  debit_credit_status payment_method  \\\n",
              "0            218998  ...                  NaN            NaN   \n",
              "1            218994  ...                  NaN            NaN   \n",
              "2            228140  ...                  NaN            NaN   \n",
              "3            219001  ...                  NaN            NaN   \n",
              "4            228090  ...                  NaN            NaN   \n",
              "\n",
              "   document_create_date.1 invoice_currency     doc_id  \\\n",
              "0                     NaN          9730.04  533998569   \n",
              "1                     NaN          2476.56  544514161   \n",
              "2                     NaN         23511.09  532638486   \n",
              "3                     NaN           996.65  540260006   \n",
              "4                     NaN            19.90  536751412   \n",
              "\n",
              "   actual_outstanding_amount  payment_amount  days_past_duedate  age_invoice  \\\n",
              "0                    9730.04         9730.04                  0           60   \n",
              "1                    2476.56         2476.56                  2           62   \n",
              "2                   23511.09        23511.09                 40          100   \n",
              "3                     996.65          996.65                 -1           59   \n",
              "4                      19.90           19.90                 -1           59   \n",
              "\n",
              "   dispute_amount  \n",
              "0             NaN  \n",
              "1             NaN  \n",
              "2             NaN  \n",
              "3             NaN  \n",
              "4             NaN  \n",
              "\n",
              "[5 rows x 47 columns]"
            ]
          },
          "execution_count": 3,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "use_case.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "PlY-N1BPAovJ",
        "outputId": "5ad48126-4ce0-46c4-8cd8-9703b530530f"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "(50000, 47)"
            ]
          },
          "execution_count": 4,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "use_case.shape"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "K6nq3axKAovJ"
      },
      "source": [
        "# Data Cleaning/Preprocessing"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "O74sn5nkAovJ",
        "outputId": "1bbf24f9-028c-4ac5-abed-c96c5aedf4a5"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "acct_doc_header_id               0\n",
              "company_id                       0\n",
              "doc_number                       0\n",
              "doc_number_norm                  0\n",
              "business_code                    0\n",
              "create_year                  50000\n",
              "document_line_number         50000\n",
              "document_type                    0\n",
              "cust_number                      0\n",
              "cust_number_norm                 0\n",
              "customer_map_id                  0\n",
              "name_customer                    0\n",
              "division                     50000\n",
              "document_create_date             0\n",
              "document_create_date_norm        0\n",
              "posting_date                 50000\n",
              "posting_date_norm            50000\n",
              "posting_id                   50000\n",
              "due_in_date                  50000\n",
              "due_in_date_norm             50000\n",
              "order_create_date            50000\n",
              "order_date_norm              50000\n",
              "invoice_id                       0\n",
              "invoice_id_norm                  0\n",
              "baseline_create_date         39586\n",
              "invoice_date_norm            39586\n",
              "total_open_amount                0\n",
              "total_open_amount_norm           0\n",
              "cust_payment_terms               0\n",
              "area_business                50000\n",
              "shipping_date                39586\n",
              "shipping_to                  50000\n",
              "clear_date                    5000\n",
              "clear_date_norm               5000\n",
              "reason_code                  50000\n",
              "is_open_invoice                  0\n",
              "discount_due_date_norm       50000\n",
              "debit_credit_status          50000\n",
              "payment_method               50000\n",
              "document_create_date.1       50000\n",
              "invoice_currency                 0\n",
              "doc_id                           0\n",
              "actual_outstanding_amount        0\n",
              "payment_amount                   0\n",
              "days_past_duedate                0\n",
              "age_invoice                      0\n",
              "dispute_amount               50000\n",
              "dtype: int64"
            ]
          },
          "execution_count": 5,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "#sum of rows containing null values in every column,columns with more null values than actual values are not quite\n",
        "#insightful. Especially those containing all null values.\n",
        "use_case.isnull().sum()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Ed12MNMoAovJ"
      },
      "outputs": [],
      "source": [
        "#deleting rows with all null values\n",
        "use_case.dropna(axis=1,how=\"all\",inplace=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "onGdPnPTAovK"
      },
      "outputs": [],
      "source": [
        "#dropping rows containing majority of null of values\n",
        "use_case.drop(use_case.columns[1 : 4], axis = 1,inplace=True)\n",
        "use_case.drop(['document_type','customer_map_id','invoice_id_norm','shipping_date','baseline_create_date','clear_date',\n",
        "               'document_create_date','total_open_amount'],inplace=True,axis=1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "4mQh1vhPAovK"
      },
      "outputs": [],
      "source": [
        "use_case.drop('invoice_date_norm',inplace=True,axis=1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "QNbuM37AAovK",
        "outputId": "7eb7f5d1-4ff3-4968-9b40-54c83b985ef2"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "acct_doc_header_id              0\n",
              "business_code                   0\n",
              "cust_number                     0\n",
              "cust_number_norm                0\n",
              "name_customer                   0\n",
              "document_create_date_norm       0\n",
              "invoice_id                      0\n",
              "total_open_amount_norm          0\n",
              "cust_payment_terms              0\n",
              "clear_date_norm              5000\n",
              "is_open_invoice                 0\n",
              "invoice_currency                0\n",
              "doc_id                          0\n",
              "actual_outstanding_amount       0\n",
              "payment_amount                  0\n",
              "days_past_duedate               0\n",
              "age_invoice                     0\n",
              "dtype: int64"
            ]
          },
          "execution_count": 9,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "use_case.isnull().sum()\n",
        "#The rows having clear date as null values are not dropped as that is the subset of the data on which predictions need to\n",
        "#be made. The absence of clear date shows that we need to predict partial payment for those rows."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Vs5GflorAovK"
      },
      "source": [
        "# Statistical Inferencing : Univariate and Bivariate"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "TLrA91LUAovK"
      },
      "source": [
        "Univariate"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "scrolled": true,
        "id": "UTUIx-YeAovK",
        "outputId": "a18b7781-7e80-466a-91b1-dd36bce8a320"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>total_open_amount_norm</th>\n",
              "      <th>cust_payment_terms</th>\n",
              "      <th>is_open_invoice</th>\n",
              "      <th>invoice_currency</th>\n",
              "      <th>actual_outstanding_amount</th>\n",
              "      <th>payment_amount</th>\n",
              "      <th>days_past_duedate</th>\n",
              "      <th>age_invoice</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <td>count</td>\n",
              "      <td>50000.000000</td>\n",
              "      <td>50000.000000</td>\n",
              "      <td>50000.000000</td>\n",
              "      <td>50000.000000</td>\n",
              "      <td>50000.000000</td>\n",
              "      <td>50000.000000</td>\n",
              "      <td>50000.000000</td>\n",
              "      <td>50000.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>mean</td>\n",
              "      <td>811.230893</td>\n",
              "      <td>61.039400</td>\n",
              "      <td>0.076860</td>\n",
              "      <td>8686.601752</td>\n",
              "      <td>8686.601752</td>\n",
              "      <td>7235.451140</td>\n",
              "      <td>8.398140</td>\n",
              "      <td>69.437540</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>std</td>\n",
              "      <td>4730.153049</td>\n",
              "      <td>3.556417</td>\n",
              "      <td>0.266372</td>\n",
              "      <td>14473.063149</td>\n",
              "      <td>14473.063149</td>\n",
              "      <td>13318.168083</td>\n",
              "      <td>35.389873</td>\n",
              "      <td>35.323374</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>min</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.420000</td>\n",
              "      <td>1.420000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-69.000000</td>\n",
              "      <td>4.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>25%</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>60.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1692.622500</td>\n",
              "      <td>1692.622500</td>\n",
              "      <td>861.040000</td>\n",
              "      <td>-2.000000</td>\n",
              "      <td>59.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>50%</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>60.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>5098.500000</td>\n",
              "      <td>5098.500000</td>\n",
              "      <td>3794.465000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>62.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>75%</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>60.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>11442.420000</td>\n",
              "      <td>11442.420000</td>\n",
              "      <td>9756.185000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>68.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>max</td>\n",
              "      <td>456713.360000</td>\n",
              "      <td>75.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>851117.800000</td>\n",
              "      <td>851117.800000</td>\n",
              "      <td>851117.800000</td>\n",
              "      <td>558.000000</td>\n",
              "      <td>618.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "       total_open_amount_norm  cust_payment_terms  is_open_invoice  \\\n",
              "count            50000.000000        50000.000000     50000.000000   \n",
              "mean               811.230893           61.039400         0.076860   \n",
              "std               4730.153049            3.556417         0.266372   \n",
              "min                  0.000000            0.000000         0.000000   \n",
              "25%                  0.000000           60.000000         0.000000   \n",
              "50%                  0.000000           60.000000         0.000000   \n",
              "75%                  0.000000           60.000000         0.000000   \n",
              "max             456713.360000           75.000000         1.000000   \n",
              "\n",
              "       invoice_currency  actual_outstanding_amount  payment_amount  \\\n",
              "count      50000.000000               50000.000000    50000.000000   \n",
              "mean        8686.601752                8686.601752     7235.451140   \n",
              "std        14473.063149               14473.063149    13318.168083   \n",
              "min            1.420000                   1.420000        0.000000   \n",
              "25%         1692.622500                1692.622500      861.040000   \n",
              "50%         5098.500000                5098.500000     3794.465000   \n",
              "75%        11442.420000               11442.420000     9756.185000   \n",
              "max       851117.800000              851117.800000   851117.800000   \n",
              "\n",
              "       days_past_duedate   age_invoice  \n",
              "count       50000.000000  50000.000000  \n",
              "mean            8.398140     69.437540  \n",
              "std            35.389873     35.323374  \n",
              "min           -69.000000      4.000000  \n",
              "25%            -2.000000     59.000000  \n",
              "50%             2.000000     62.000000  \n",
              "75%             6.000000     68.000000  \n",
              "max           558.000000    618.000000  "
            ]
          },
          "execution_count": 28,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "use_case[['total_open_amount_norm','cust_payment_terms','is_open_invoice','invoice_currency',\n",
        "'actual_outstanding_amount','payment_amount','days_past_duedate','age_invoice']].describe()\n",
        "#It is seen that the days_past_duedate has a mean which is very less,so most payments are coming on time\n",
        "#age invoice is higher though indicating that the payment terms for most businesses are quite long/sufficient.\n",
        "#the min,max and std for actual open amounts and actual closed amounts are quite high which shows varrying data. These\n",
        "#features may therefore not be very useful to use as it is but we can derive other features from them."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "hFV0t8C5AovK"
      },
      "source": [
        "Plotting Box Plots"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "caA6ZQYXAovK",
        "outputId": "3e06e6bd-0994-44ed-96f5-592032dbfb49"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x360 with 4 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          },
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x360 with 4 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          },
          "output_type": "display_data"
        }
      ],
      "source": [
        "plot_data=['total_open_amount_norm','cust_payment_terms','is_open_invoice','invoice_currency',\n",
        "'actual_outstanding_amount','payment_amount','days_past_duedate','age_invoice']\n",
        "fig, axes = plt.subplots(nrows=1, ncols=4, figsize=(20, 5))\n",
        "axes[0].boxplot(use_case['total_open_amount_norm'])\n",
        "axes[0].set_xlabel('total_open_amount_norm')\n",
        "axes[1].boxplot(use_case['cust_payment_terms'])\n",
        "axes[1].set_xlabel('cust_payment_terms')\n",
        "axes[2].boxplot(use_case['is_open_invoice'])\n",
        "axes[2].set_xlabel('is_open_invoice')\n",
        "axes[3].boxplot(use_case['invoice_currency'])\n",
        "axes[3].set_xlabel('invoice_currency')\n",
        "\n",
        "fig, axes = plt.subplots(nrows=1, ncols=4, figsize=(20, 5))\n",
        "axes[0].boxplot(use_case['days_past_duedate'])\n",
        "axes[0].set_xlabel('days_past_duedate')\n",
        "axes[1].boxplot(use_case['actual_outstanding_amount'])\n",
        "axes[1].set_xlabel('actual_outstanding_amount')\n",
        "axes[2].boxplot(use_case['payment_amount'])\n",
        "axes[2].set_xlabel('payment_amount')\n",
        "axes[3].boxplot(use_case['age_invoice'])\n",
        "axes[3].set_xlabel('ge_invoice')\n",
        "fig.tight_layout()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "cCoG2plIAovK"
      },
      "source": [
        "The boxplots show that there are many outliers in the data,customer payment terms shows a median of around 60,Single line ,means that value is not ranging but is rather just a few fixed numbers. Similarily with is_open_invoice which is in the form of either 0 or 1.Further down the work flow, features can be designed to smoothen out or lessen the outliers."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Q5nkw7YDAovK"
      },
      "source": [
        "Bivariate"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ENDSom0rAovL",
        "outputId": "d8061567-f0a8-410a-91ec-2080ab161eaa"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>total_open_amount_norm</th>\n",
              "      <th>cust_payment_terms</th>\n",
              "      <th>is_open_invoice</th>\n",
              "      <th>invoice_currency</th>\n",
              "      <th>actual_outstanding_amount</th>\n",
              "      <th>payment_amount</th>\n",
              "      <th>days_past_duedate</th>\n",
              "      <th>age_invoice</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <td>total_open_amount_norm</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.067222</td>\n",
              "      <td>0.437884</td>\n",
              "      <td>0.233569</td>\n",
              "      <td>0.233569</td>\n",
              "      <td>-0.093102</td>\n",
              "      <td>-0.094499</td>\n",
              "      <td>-0.087909</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>cust_payment_terms</td>\n",
              "      <td>0.067222</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.086784</td>\n",
              "      <td>0.028719</td>\n",
              "      <td>0.028719</td>\n",
              "      <td>0.006344</td>\n",
              "      <td>-0.068927</td>\n",
              "      <td>0.031625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>is_open_invoice</td>\n",
              "      <td>0.437884</td>\n",
              "      <td>0.086784</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-0.013900</td>\n",
              "      <td>-0.013900</td>\n",
              "      <td>-0.156762</td>\n",
              "      <td>-0.246070</td>\n",
              "      <td>-0.237795</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>invoice_currency</td>\n",
              "      <td>0.233569</td>\n",
              "      <td>0.028719</td>\n",
              "      <td>-0.013900</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.903881</td>\n",
              "      <td>0.036473</td>\n",
              "      <td>0.039433</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>actual_outstanding_amount</td>\n",
              "      <td>0.233569</td>\n",
              "      <td>0.028719</td>\n",
              "      <td>-0.013900</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.903881</td>\n",
              "      <td>0.036473</td>\n",
              "      <td>0.039433</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>payment_amount</td>\n",
              "      <td>-0.093102</td>\n",
              "      <td>0.006344</td>\n",
              "      <td>-0.156762</td>\n",
              "      <td>0.903881</td>\n",
              "      <td>0.903881</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.075626</td>\n",
              "      <td>0.076407</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>days_past_duedate</td>\n",
              "      <td>-0.094499</td>\n",
              "      <td>-0.068927</td>\n",
              "      <td>-0.246070</td>\n",
              "      <td>0.036473</td>\n",
              "      <td>0.036473</td>\n",
              "      <td>0.075626</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.994943</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>age_invoice</td>\n",
              "      <td>-0.087909</td>\n",
              "      <td>0.031625</td>\n",
              "      <td>-0.237795</td>\n",
              "      <td>0.039433</td>\n",
              "      <td>0.039433</td>\n",
              "      <td>0.076407</td>\n",
              "      <td>0.994943</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                           total_open_amount_norm  cust_payment_terms  \\\n",
              "total_open_amount_norm                   1.000000            0.067222   \n",
              "cust_payment_terms                       0.067222            1.000000   \n",
              "is_open_invoice                          0.437884            0.086784   \n",
              "invoice_currency                         0.233569            0.028719   \n",
              "actual_outstanding_amount                0.233569            0.028719   \n",
              "payment_amount                          -0.093102            0.006344   \n",
              "days_past_duedate                       -0.094499           -0.068927   \n",
              "age_invoice                             -0.087909            0.031625   \n",
              "\n",
              "                           is_open_invoice  invoice_currency  \\\n",
              "total_open_amount_norm            0.437884          0.233569   \n",
              "cust_payment_terms                0.086784          0.028719   \n",
              "is_open_invoice                   1.000000         -0.013900   \n",
              "invoice_currency                 -0.013900          1.000000   \n",
              "actual_outstanding_amount        -0.013900          1.000000   \n",
              "payment_amount                   -0.156762          0.903881   \n",
              "days_past_duedate                -0.246070          0.036473   \n",
              "age_invoice                      -0.237795          0.039433   \n",
              "\n",
              "                           actual_outstanding_amount  payment_amount  \\\n",
              "total_open_amount_norm                      0.233569       -0.093102   \n",
              "cust_payment_terms                          0.028719        0.006344   \n",
              "is_open_invoice                            -0.013900       -0.156762   \n",
              "invoice_currency                            1.000000        0.903881   \n",
              "actual_outstanding_amount                   1.000000        0.903881   \n",
              "payment_amount                              0.903881        1.000000   \n",
              "days_past_duedate                           0.036473        0.075626   \n",
              "age_invoice                                 0.039433        0.076407   \n",
              "\n",
              "                           days_past_duedate  age_invoice  \n",
              "total_open_amount_norm             -0.094499    -0.087909  \n",
              "cust_payment_terms                 -0.068927     0.031625  \n",
              "is_open_invoice                    -0.246070    -0.237795  \n",
              "invoice_currency                    0.036473     0.039433  \n",
              "actual_outstanding_amount           0.036473     0.039433  \n",
              "payment_amount                      0.075626     0.076407  \n",
              "days_past_duedate                   1.000000     0.994943  \n",
              "age_invoice                         0.994943     1.000000  "
            ]
          },
          "execution_count": 81,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "#Corrmatrix to see how variables are related to each other\n",
        "#the code was run after some feature engineering ,thus it may include features that are shown later\n",
        "corrMatrix = use_case[plot_data].corr(method='pearson').dropna()\n",
        "corrMatrix\n",
        "\n",
        "#here however the id correlations should be ignored"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "L-p5mrHcAovL"
      },
      "source": [
        "As it can be seen,the variables aren't related to each other so we need to proceed further. As correlation matrix also indicates causation,we see that , past due dates directly affects age_invoice; On the other hand,payment amount is strongly correlated to actual_outstanding_account.However, this relation is extremely high and will lead to output leaks. invoice currency and payment account may also cause this issue."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "XbzJ1ENqAovL",
        "outputId": "9f36895a-fefb-4273-b6d6-b4d8f8f2bc9e"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.PairGrid at 0x207b1020e88>"
            ]
          },
          "execution_count": 82,
          "metadata": {},
          "output_type": "execute_result"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x1440 with 72 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          },
          "output_type": "display_data"
        }
      ],
      "source": [
        "sns.pairplot(use_case, vars = plot_data, dropna = True)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "BQAtPU1mAovL"
      },
      "source": [
        "while most data is non linear here, a few observations can be made:                                              \n",
        "->days past due date increases with increasing payment amount(target) mostly                                  \n",
        "->a gradual decline in age of invoice is seen with increasing payment terms(if the business is given more time then they      probably would not extend days past sue date as much)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Uj1YpowYAovL"
      },
      "source": [
        "Some more graphs are:"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "qcZ14L_VAovL",
        "outputId": "2ce44c0c-b0dc-446c-cd8f-c2d94cbbbb56"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          },
          "output_type": "display_data"
        }
      ],
      "source": [
        "max_paid=use_case['name_customer'][use_case['total_open_amount_norm'] > 0].value_counts()\n",
        "def barplot(var1,var2,label1,label2):\n",
        "    plt.figure(figsize=(20,5))\n",
        "    plt.bar(var1,var2,width=0.8)\n",
        "    plt.xticks(rotation=45)\n",
        "    plt.xlabel(label1)\n",
        "    plt.ylabel(label2)\n",
        "    plt.show()\n",
        "#we can see which customers pre pay as well which may be beneficial in business point of view\n",
        "barplot(max_paid.index,max_paid,'business name','Total number of prepaid accounts')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "AE34jAYVAovL",
        "outputId": "567086f2-5267-4f94-887a-2e152185e505"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          },
          "output_type": "display_data"
        }
      ],
      "source": [
        "#this data can be used to understand which companies need to be followed more.\n",
        "#Some generalized plots are :\n",
        "\n",
        "# the past due dates is usally more for larger values\n",
        "x=use_case['invoice_currency']\n",
        "y=use_case['days_past_duedate']\n",
        "x=x/100000\n",
        "plt.figure(figsize=(20,5))\n",
        "plt.bar(y,x,color='r')\n",
        "plt.xlabel(\"days past due\")\n",
        "plt.ylabel(\"invoice currency\")\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "-4N949fyAovL",
        "outputId": "1d2cd0f3-1f55-4396-e942-39bd7f92581c"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "It is clear that the higher the Invoice Currency, Higher is the Payment Terms\n"
          ]
        },
        {
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x207e51ba508>"
            ]
          },
          "execution_count": 86,
          "metadata": {},
          "output_type": "execute_result"
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "#customer payment terms vs invoice currency\n",
        "print(\"It is clear that the higher the Invoice Currency, Higher is the Payment Terms\")\n",
        "x=use_case['cust_payment_terms']\n",
        "y=use_case['invoice_currency']\n",
        "y=y/100000\n",
        "sns.set(color_codes=True)\n",
        "sns.barplot(x,y)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6GQkhY0pAovL"
      },
      "source": [
        "# Feature Engineering for Direct Features"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "664hdzdmAovM"
      },
      "source": [
        "Direct Features (independent of aggregation or other rows)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xjKV-memAovM"
      },
      "source": [
        "Glossary for the created direct features:\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dvDaywHNAovM"
      },
      "source": [
        "year clearance : year of clearance,which meay indicate the patterns in a given year. For eg, mean of invoice currency for businesses maybe more in 2019 than 2018"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "nWmUDDWWAovM"
      },
      "source": [
        "year of document create : from the document create year. Perhaps can help later in model building showing trends in a particular year that the invoice document was created. The year of clearance along with the year of document create and days past due may help to find patterns which could help the model learn better"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LDaHoiGNAovM"
      },
      "source": [
        "difference : tells us how late the payment was made. For payment terms 60 and days past due date as 70,it would be 10 but for due days past 80,it would be 20.Higher the difference, later the payment is actually made."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "iafw3U_FAovM"
      },
      "source": [
        "delay score : score based on days past due date.Higher the score,earlier the payment. This score will be used to group the data and find the means of every group from train and mapping to test and validation set. More about this is further down. Those means will further be used to create normalization features because the outstanding amount norm too is very unevenly distributed even for the same year/company label/days past due date. Therefore...."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "EJIQFAmzAovM"
      },
      "outputs": [],
      "source": [
        "                                               #delay_score\n",
        "                                                   #|\n",
        "#                                        _______________________\n",
        "#                                        3     2      1        0\n",
        "#                                        |     |      |         \\\n",
        "#                               normalize  normalize  normalize  normalize\n",
        "\n",
        "#                   (each group now has an normal distribution with respect to its delay score. Now,\n",
        "#               delay score along with outstanding normal account according to each group can give more insight)\n",
        "#                              More about this is in after mapping section where this is implemented."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ndCw-p7VAovM"
      },
      "source": [
        "currency score : score based on the quartiles,min and max of the invoice currency.lower the score,lower the invoice currency value/worth. This score will be used to group the data and find the means of every group from train and mapping to test and validation set. More about this is further down."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "78uIUpTPAovM"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "kwJTSps1AovU"
      },
      "outputs": [],
      "source": [
        "#The dataset recieved by me has many dates and columns in terms of number of days which may prove really helpful for\n",
        "#creating more features from them"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "hKNKZZawAovU"
      },
      "outputs": [],
      "source": [
        "import datetime\n",
        "\n",
        "#transaction year from clear_date_norm\n",
        "use_case['year_of_transaction'] = pd.to_datetime(use_case.clear_date_norm)\n",
        "use_case['year_clearance'] = use_case['year_of_transaction'].dt.year\n",
        "use_case.year_clearance=use_case.year_clearance.astype('Int64')\n",
        "\n",
        "#invoice document create here from year of document create\n",
        "use_case['year_of_document_create'] = pd.to_datetime(use_case.document_create_date_norm)\n",
        "use_case['year_of_document_create'] = use_case['year_of_document_create'].dt.year\n",
        "use_case.year_of_document_create=use_case.year_of_document_create.astype('Int64')\n",
        "\n",
        "#Difference to see how much the days past due is longer than the payment terms.It can be said that the lesser the\n",
        "#difference,the better and more the difference,more the particular transaction with the business needs to be taken care of.\n",
        "#This is in some cases may eliminate the need of looking at both the payment terms and past due dates\n",
        "use_case['difference']=use_case['days_past_duedate']-use_case['cust_payment_terms']\n",
        "\n",
        "#Grouping the data according to days past due as days past due and and payment amount impact each other to some extent(pair\n",
        "#plot)\n",
        "use_case['delay_score'] = pd.cut(use_case['days_past_duedate'],bins=[-200,-1,60,120,600],labels=[3,2,1,0])\n",
        "\n",
        "#the invoice currency cannot be included as a feature as it is because it will lead to memory leaks,so the data is scored\n",
        "#on the invoice amount for addition of other features according to this grouping based on the quantiles,min and max.\n",
        "use_case['currency_score'] = pd.cut(use_case['invoice_currency'],bins=[0,1663,5027,11230,851118],labels=[0,1,2,3])\n",
        "\n",
        "#total time to make the payment\n",
        "use_case['total_time_to_clear']=0\n",
        "use_case['total_time_to_clear']=use_case['cust_payment_terms']+use_case['days_past_duedate']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "3TmDRd7HAovU",
        "outputId": "bdfb1e43-6fa2-497b-a066-ef8ce6e488b6"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x360 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "we can see that business with walmart has been increasing. This could be done by creating the feature 'year_clearance' from 'clear_date_norm'\n"
          ]
        }
      ],
      "source": [
        "business_eg=use_case[use_case['name_customer']=='walmart']\n",
        "#we take Walmart as an example and observe its trends in terms of revenue\n",
        "business_growth=business_eg.groupby('year_clearance')['invoice_currency'].mean()\n",
        "barplot(business_growth.index,business_growth,'year','business growth in invoice currency')\n",
        "print(\"we can see that business with walmart has been increasing. This could be done by creating the feature 'year_clearance' from 'clear_date_norm'\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "aD0STkFlAovU",
        "outputId": "4f21cd85-c11f-4458-8120-e7362b9f8129"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "<BarContainer object of 50000 artists>"
            ]
          },
          "execution_count": 98,
          "metadata": {},
          "output_type": "execute_result"
        },
        {
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "plt.bar(use_case['difference'],use_case['payment_amount'])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "LaaD5hqEAovU"
      },
      "outputs": [],
      "source": [
        "#Ratio between the invoice currency and total days to pay.\n",
        "use_case['invoice_to_total_time']=use_case['invoice_curreny'].astype(float)/use_case['total_time_to_clear'].astype(float)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "0ecxmmuMAovU"
      },
      "source": [
        "# Train Test Validation Dataset"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "IYUZ4TycAovU"
      },
      "source": [
        "Before making the aggregation features which need to mapped from the train to the validation and test dataset, splitting\n",
        "these three from the original dataset is necessary"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "yCiBDxwRAovU"
      },
      "outputs": [],
      "source": [
        "#Sort according to clear date so that the latest transactions are at the end of the data\n",
        "use_case.sort_values(['clear_date_norm'],inplace=True)\n",
        "use_case.drop_duplicates('invoice_id',keep=\"first\", inplace=True) #keep only first payment\n",
        "\n",
        "#use_case.drop('invoice_date_norm',axis=1,inplace=True)\n",
        "\n",
        "#Prediction is to be made for first partial payment,which means those rows must have clear date null. This indicates that\n",
        "#their partial payment is not recieved and needs to be predicted.\n",
        "test=use_case[use_case['clear_date_norm'].isnull()]\n",
        "\n",
        "#Train is the rest of the 45k rows that have been cleared\n",
        "train=use_case[use_case['clear_date_norm'].notnull()]\n",
        "\n",
        "#a validation set is kept back to evaluate the model before applying on the actual test data.\n",
        "validation = train.tail(5000)\n",
        "trainn=train.head(40000)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gZX-gaU7AovU"
      },
      "source": [
        "# Feature Engineering for Aggregate Features(Mapping from train set)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "MdxBlgUiAovU"
      },
      "source": [
        "Glossary for created aggregate features"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "EDHAcM4oAovU"
      },
      "source": [
        "Mean outstanding amount : Means of each group based on delay score mapped from train to test and validate. Used for further calculations."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "rkIboTWzAovU"
      },
      "source": [
        "Invoice currency norm : Even within all the invoice currency groups which were made earlier from 0 to 3,the invoices are not normally distributed,thus a normal distribution within the groups will help for better predictions later.This,along with the invoice_currency score."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "s336tg38AovV"
      },
      "source": [
        "out standing currency norm : Along the same lines as the invoice currency norm However, this is based on the grouping of\n",
        "delayed score. It is now to see that which feature set is the best. delay score + outstanding currency norm or invoice currency + normal distrubtion in every score group"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7Lboo1MoAovV"
      },
      "source": [
        "Mean invoice currency : Made to use it in further calculations but this along with invoice currency score + invoice currency norm may together be helpful later"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "pK1vljFFAovV"
      },
      "outputs": [],
      "source": [
        "# what I am trying to achieve here is,supposing invoice currency norm is 0.43 and another is something similar like 0.434\n",
        "#Now if the point is in group 2 or group 3 will affect its output.Also a normal distribution makes it better to predict\n",
        "#groupwise"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RpdmeLgRAovV"
      },
      "source": [
        "ratio_ic_to_mdd : ratio of invoice currency to the mean of the days past due date according to invoice currency score. So instead of finding ratio of invoice currency to the separate days past due date,we can see the ratio to the mean of days past due date of the group. We also need to generalize the prediction so this + invoice currency scores in the feature set may help the model learn better. This is to understand how late the payment is in terms of ratio. lower ratio means less amount paid in more time."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "s7TZsTK_AovV"
      },
      "source": [
        "variance_in_outstanding_amount : this is also calculated group wise but for delay score. Variance of every outstanding amount from the mean of its group. What I am trying to do here is , for eg : group 1, dpdd = 35, var = 234 but the same value in another group will have a different variance.which indicates that more days past due dates is taken for higher currency. But if\n",
        "low currency is present in group with higher delay score then maybe the first partial payment could be more or there maybe a dispute."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "faRX4nURAovV"
      },
      "outputs": [],
      "source": [
        "import warnings\n",
        "warnings.filterwarnings(\"ignore\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "yFNtJXGgAovV",
        "outputId": "c1281c0a-3d03-4559-8484-79f197a0a57a"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>acct_doc_header_id</th>\n",
              "      <th>actual_outstanding_amount</th>\n",
              "      <th>age_invoice</th>\n",
              "      <th>cust_number</th>\n",
              "      <th>cust_number_norm</th>\n",
              "      <th>cust_payment_terms</th>\n",
              "      <th>days_past_duedate</th>\n",
              "      <th>difference</th>\n",
              "      <th>doc_id</th>\n",
              "      <th>invoice_currency</th>\n",
              "      <th>invoice_id</th>\n",
              "      <th>is_open_invoice</th>\n",
              "      <th>payment_amount</th>\n",
              "      <th>total_open_amount_norm</th>\n",
              "      <th>total_time_to_clear</th>\n",
              "      <th>year_clearance</th>\n",
              "      <th>year_of_document_create</th>\n",
              "      <th>year_of_transaction</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>delay_score</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <td>3</td>\n",
              "      <td>5.381342e+08</td>\n",
              "      <td>7378.626610</td>\n",
              "      <td>56.163921</td>\n",
              "      <td>224956.490664</td>\n",
              "      <td>224956.490664</td>\n",
              "      <td>60.808256</td>\n",
              "      <td>-4.644335</td>\n",
              "      <td>-65.452590</td>\n",
              "      <td>5.381342e+08</td>\n",
              "      <td>7378.626610</td>\n",
              "      <td>3.777512e+07</td>\n",
              "      <td>0</td>\n",
              "      <td>6547.864380</td>\n",
              "      <td>0.0</td>\n",
              "      <td>56.163921</td>\n",
              "      <td>2017.971810</td>\n",
              "      <td>2017.797639</td>\n",
              "      <td>2018-06-26 21:55:19.275127808</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>2</td>\n",
              "      <td>5.387577e+08</td>\n",
              "      <td>8774.226257</td>\n",
              "      <td>68.539165</td>\n",
              "      <td>223120.482685</td>\n",
              "      <td>223120.482685</td>\n",
              "      <td>61.133701</td>\n",
              "      <td>7.405464</td>\n",
              "      <td>-53.728236</td>\n",
              "      <td>5.387577e+08</td>\n",
              "      <td>8774.226257</td>\n",
              "      <td>3.882363e+07</td>\n",
              "      <td>0</td>\n",
              "      <td>8707.064054</td>\n",
              "      <td>0.0</td>\n",
              "      <td>68.539165</td>\n",
              "      <td>2018.121226</td>\n",
              "      <td>2017.904221</td>\n",
              "      <td>2018-08-12 03:22:46.685730048</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>1</td>\n",
              "      <td>5.319570e+08</td>\n",
              "      <td>10893.876345</td>\n",
              "      <td>148.408810</td>\n",
              "      <td>224003.547527</td>\n",
              "      <td>224003.547527</td>\n",
              "      <td>60.238022</td>\n",
              "      <td>88.170788</td>\n",
              "      <td>27.932767</td>\n",
              "      <td>5.319570e+08</td>\n",
              "      <td>10893.876345</td>\n",
              "      <td>2.906113e+07</td>\n",
              "      <td>0</td>\n",
              "      <td>10610.401974</td>\n",
              "      <td>0.0</td>\n",
              "      <td>148.408810</td>\n",
              "      <td>2017.006569</td>\n",
              "      <td>2017.005023</td>\n",
              "      <td>2017-08-22 14:16:19.288994048</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>0</td>\n",
              "      <td>5.322769e+08</td>\n",
              "      <td>11103.227025</td>\n",
              "      <td>283.473088</td>\n",
              "      <td>223220.439093</td>\n",
              "      <td>223220.439093</td>\n",
              "      <td>59.660057</td>\n",
              "      <td>223.813031</td>\n",
              "      <td>164.152975</td>\n",
              "      <td>5.322769e+08</td>\n",
              "      <td>11103.227025</td>\n",
              "      <td>2.945067e+07</td>\n",
              "      <td>0</td>\n",
              "      <td>11085.238130</td>\n",
              "      <td>0.0</td>\n",
              "      <td>283.473088</td>\n",
              "      <td>2017.076487</td>\n",
              "      <td>2017.014164</td>\n",
              "      <td>2017-08-22 20:11:33.484419328</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "             acct_doc_header_id  actual_outstanding_amount  age_invoice  \\\n",
              "delay_score                                                               \n",
              "3                  5.381342e+08                7378.626610    56.163921   \n",
              "2                  5.387577e+08                8774.226257    68.539165   \n",
              "1                  5.319570e+08               10893.876345   148.408810   \n",
              "0                  5.322769e+08               11103.227025   283.473088   \n",
              "\n",
              "               cust_number  cust_number_norm  cust_payment_terms  \\\n",
              "delay_score                                                        \n",
              "3            224956.490664     224956.490664           60.808256   \n",
              "2            223120.482685     223120.482685           61.133701   \n",
              "1            224003.547527     224003.547527           60.238022   \n",
              "0            223220.439093     223220.439093           59.660057   \n",
              "\n",
              "             days_past_duedate  difference        doc_id  invoice_currency  \\\n",
              "delay_score                                                                  \n",
              "3                    -4.644335  -65.452590  5.381342e+08       7378.626610   \n",
              "2                     7.405464  -53.728236  5.387577e+08       8774.226257   \n",
              "1                    88.170788   27.932767  5.319570e+08      10893.876345   \n",
              "0                   223.813031  164.152975  5.322769e+08      11103.227025   \n",
              "\n",
              "               invoice_id  is_open_invoice  payment_amount  \\\n",
              "delay_score                                                  \n",
              "3            3.777512e+07                0     6547.864380   \n",
              "2            3.882363e+07                0     8707.064054   \n",
              "1            2.906113e+07                0    10610.401974   \n",
              "0            2.945067e+07                0    11085.238130   \n",
              "\n",
              "             total_open_amount_norm  total_time_to_clear  year_clearance  \\\n",
              "delay_score                                                                \n",
              "3                               0.0            56.163921     2017.971810   \n",
              "2                               0.0            68.539165     2018.121226   \n",
              "1                               0.0           148.408810     2017.006569   \n",
              "0                               0.0           283.473088     2017.076487   \n",
              "\n",
              "             year_of_document_create           year_of_transaction  \n",
              "delay_score                                                         \n",
              "3                        2017.797639 2018-06-26 21:55:19.275127808  \n",
              "2                        2017.904221 2018-08-12 03:22:46.685730048  \n",
              "1                        2017.005023 2017-08-22 14:16:19.288994048  \n",
              "0                        2017.014164 2017-08-22 20:11:33.484419328  "
            ]
          },
          "execution_count": 106,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "trainn.groupby('delay_score').mean()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "VkloVb8ZAovV"
      },
      "outputs": [],
      "source": [
        "#We can see how the mean is increasing with the decrease in delay score. More the time past due date,more is the mean of\n",
        "#actual outstanding account."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "UlW9wk0nAovV"
      },
      "outputs": [],
      "source": [
        "mean_temp=trainn.groupby('delay_score').mean().actual_outstanding_amount #store in a list"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "oErlqfbVAovV",
        "outputId": "d0b02ca8-7e40-4962-99e3-922725dd7633"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>acct_doc_header_id</th>\n",
              "      <th>actual_outstanding_amount</th>\n",
              "      <th>age_invoice</th>\n",
              "      <th>cust_number</th>\n",
              "      <th>cust_number_norm</th>\n",
              "      <th>cust_payment_terms</th>\n",
              "      <th>days_past_duedate</th>\n",
              "      <th>difference</th>\n",
              "      <th>doc_id</th>\n",
              "      <th>invoice_currency</th>\n",
              "      <th>...</th>\n",
              "      <th>invoice_id</th>\n",
              "      <th>is_open_invoice</th>\n",
              "      <th>outstanding_amount_norm</th>\n",
              "      <th>payment_amount</th>\n",
              "      <th>total_open_amount_norm</th>\n",
              "      <th>total_time_to_clear</th>\n",
              "      <th>variance_in_outstanding_amount</th>\n",
              "      <th>year_clearance</th>\n",
              "      <th>year_of_document_create</th>\n",
              "      <th>year_of_transaction</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>delay_score</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <td>3</td>\n",
              "      <td>5.381342e+08</td>\n",
              "      <td>7378.626610</td>\n",
              "      <td>56.163921</td>\n",
              "      <td>224956.490664</td>\n",
              "      <td>224956.490664</td>\n",
              "      <td>60.808256</td>\n",
              "      <td>-4.644335</td>\n",
              "      <td>-65.452590</td>\n",
              "      <td>5.381342e+08</td>\n",
              "      <td>7378.626610</td>\n",
              "      <td>...</td>\n",
              "      <td>3.777512e+07</td>\n",
              "      <td>0</td>\n",
              "      <td>0.022644</td>\n",
              "      <td>6547.864380</td>\n",
              "      <td>0.0</td>\n",
              "      <td>56.163921</td>\n",
              "      <td>9889.419966</td>\n",
              "      <td>2017.971810</td>\n",
              "      <td>2017.797639</td>\n",
              "      <td>2018-06-26 21:55:19.275127808</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>2</td>\n",
              "      <td>5.387577e+08</td>\n",
              "      <td>8774.226257</td>\n",
              "      <td>68.539165</td>\n",
              "      <td>223120.482685</td>\n",
              "      <td>223120.482685</td>\n",
              "      <td>61.133701</td>\n",
              "      <td>7.405464</td>\n",
              "      <td>-53.728236</td>\n",
              "      <td>5.387577e+08</td>\n",
              "      <td>8774.226257</td>\n",
              "      <td>...</td>\n",
              "      <td>3.882363e+07</td>\n",
              "      <td>0</td>\n",
              "      <td>0.010307</td>\n",
              "      <td>8707.064054</td>\n",
              "      <td>0.0</td>\n",
              "      <td>68.539165</td>\n",
              "      <td>8944.867509</td>\n",
              "      <td>2018.121226</td>\n",
              "      <td>2017.904221</td>\n",
              "      <td>2018-08-12 03:22:46.685730048</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>1</td>\n",
              "      <td>5.319570e+08</td>\n",
              "      <td>10893.876345</td>\n",
              "      <td>148.408810</td>\n",
              "      <td>224003.547527</td>\n",
              "      <td>224003.547527</td>\n",
              "      <td>60.238022</td>\n",
              "      <td>88.170788</td>\n",
              "      <td>27.932767</td>\n",
              "      <td>5.319570e+08</td>\n",
              "      <td>10893.876345</td>\n",
              "      <td>...</td>\n",
              "      <td>2.906113e+07</td>\n",
              "      <td>0</td>\n",
              "      <td>0.017196</td>\n",
              "      <td>10610.401974</td>\n",
              "      <td>0.0</td>\n",
              "      <td>148.408810</td>\n",
              "      <td>175843.271197</td>\n",
              "      <td>2017.006569</td>\n",
              "      <td>2017.005023</td>\n",
              "      <td>2017-08-22 14:16:19.288994048</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>0</td>\n",
              "      <td>5.322769e+08</td>\n",
              "      <td>11103.227025</td>\n",
              "      <td>283.473088</td>\n",
              "      <td>223220.439093</td>\n",
              "      <td>223220.439093</td>\n",
              "      <td>59.660057</td>\n",
              "      <td>223.813031</td>\n",
              "      <td>164.152975</td>\n",
              "      <td>5.322769e+08</td>\n",
              "      <td>11103.227025</td>\n",
              "      <td>...</td>\n",
              "      <td>2.945067e+07</td>\n",
              "      <td>0</td>\n",
              "      <td>0.105347</td>\n",
              "      <td>11085.238130</td>\n",
              "      <td>0.0</td>\n",
              "      <td>283.473088</td>\n",
              "      <td>394218.843799</td>\n",
              "      <td>2017.076487</td>\n",
              "      <td>2017.014164</td>\n",
              "      <td>2017-08-22 20:11:33.484419328</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>4 rows Ã— 21 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "             acct_doc_header_id  actual_outstanding_amount  age_invoice  \\\n",
              "delay_score                                                               \n",
              "3                  5.381342e+08                7378.626610    56.163921   \n",
              "2                  5.387577e+08                8774.226257    68.539165   \n",
              "1                  5.319570e+08               10893.876345   148.408810   \n",
              "0                  5.322769e+08               11103.227025   283.473088   \n",
              "\n",
              "               cust_number  cust_number_norm  cust_payment_terms  \\\n",
              "delay_score                                                        \n",
              "3            224956.490664     224956.490664           60.808256   \n",
              "2            223120.482685     223120.482685           61.133701   \n",
              "1            224003.547527     224003.547527           60.238022   \n",
              "0            223220.439093     223220.439093           59.660057   \n",
              "\n",
              "             days_past_duedate  difference        doc_id  invoice_currency  \\\n",
              "delay_score                                                                  \n",
              "3                    -4.644335  -65.452590  5.381342e+08       7378.626610   \n",
              "2                     7.405464  -53.728236  5.387577e+08       8774.226257   \n",
              "1                    88.170788   27.932767  5.319570e+08      10893.876345   \n",
              "0                   223.813031  164.152975  5.322769e+08      11103.227025   \n",
              "\n",
              "             ...    invoice_id  is_open_invoice  outstanding_amount_norm  \\\n",
              "delay_score  ...                                                           \n",
              "3            ...  3.777512e+07                0                 0.022644   \n",
              "2            ...  3.882363e+07                0                 0.010307   \n",
              "1            ...  2.906113e+07                0                 0.017196   \n",
              "0            ...  2.945067e+07                0                 0.105347   \n",
              "\n",
              "             payment_amount  total_open_amount_norm  total_time_to_clear  \\\n",
              "delay_score                                                                \n",
              "3               6547.864380                     0.0            56.163921   \n",
              "2               8707.064054                     0.0            68.539165   \n",
              "1              10610.401974                     0.0           148.408810   \n",
              "0              11085.238130                     0.0           283.473088   \n",
              "\n",
              "             variance_in_outstanding_amount  year_clearance  \\\n",
              "delay_score                                                   \n",
              "3                               9889.419966     2017.971810   \n",
              "2                               8944.867509     2018.121226   \n",
              "1                             175843.271197     2017.006569   \n",
              "0                             394218.843799     2017.076487   \n",
              "\n",
              "             year_of_document_create           year_of_transaction  \n",
              "delay_score                                                         \n",
              "3                        2017.797639 2018-06-26 21:55:19.275127808  \n",
              "2                        2017.904221 2018-08-12 03:22:46.685730048  \n",
              "1                        2017.005023 2017-08-22 14:16:19.288994048  \n",
              "0                        2017.014164 2017-08-22 20:11:33.484419328  \n",
              "\n",
              "[4 rows x 21 columns]"
            ]
          },
          "execution_count": 261,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "trainn.groupby('delay_score').mean()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "D_cl89DsAovV",
        "outputId": "2aef194d-b161-40ff-87d2-bb78ef88da9e"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "delay_score\n",
              "3     7378.626610\n",
              "2     8774.226257\n",
              "1    10893.876345\n",
              "0    11103.227025\n",
              "Name: actual_outstanding_amount, dtype: float64"
            ]
          },
          "execution_count": 109,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "mean_temp #mean in different groups,these means will be mapped to the data train and valid datasets from the train and then\n",
        "#the groupwise variance for every row will be calculated so its in the range of its properties rather than the entire table\n",
        "#and not just a categorical value."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "nx6izGOzAovV"
      },
      "outputs": [],
      "source": [
        "#map mean according to delay score\n",
        "trainn['mean_outstanding_amount']=trainn['delay_score'].map(mean_temp)\n",
        "validation['mean_outstanding_amount']=validation['delay_score'].map(mean_temp)\n",
        "test['mean_outstanding_amount']=test['delay_score'].map(mean_temp)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "_Wvi_eLlAovV"
      },
      "outputs": [],
      "source": [
        "mean_invoice=trainn.groupby('currency_score').mean().invoice_currency"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "2tgNWo8cAovV",
        "outputId": "d6959e05-3b60-46d2-eec8-8d923e060152"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>acct_doc_header_id</th>\n",
              "      <th>actual_outstanding_amount</th>\n",
              "      <th>age_invoice</th>\n",
              "      <th>cust_number</th>\n",
              "      <th>cust_number_norm</th>\n",
              "      <th>cust_payment_terms</th>\n",
              "      <th>days_past_duedate</th>\n",
              "      <th>difference</th>\n",
              "      <th>doc_id</th>\n",
              "      <th>invoice_currency</th>\n",
              "      <th>...</th>\n",
              "      <th>invoice_id</th>\n",
              "      <th>is_open_invoice</th>\n",
              "      <th>outstanding_amount_norm</th>\n",
              "      <th>payment_amount</th>\n",
              "      <th>total_open_amount_norm</th>\n",
              "      <th>total_time_to_clear</th>\n",
              "      <th>variance_in_outstanding_amount</th>\n",
              "      <th>year_clearance</th>\n",
              "      <th>year_of_document_create</th>\n",
              "      <th>year_of_transaction</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>currency_score</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <td>0</td>\n",
              "      <td>5.381607e+08</td>\n",
              "      <td>766.691701</td>\n",
              "      <td>70.016766</td>\n",
              "      <td>223277.282093</td>\n",
              "      <td>223277.282093</td>\n",
              "      <td>60.971518</td>\n",
              "      <td>9.045248</td>\n",
              "      <td>-51.926270</td>\n",
              "      <td>5.381607e+08</td>\n",
              "      <td>766.691701</td>\n",
              "      <td>...</td>\n",
              "      <td>3.793314e+07</td>\n",
              "      <td>0</td>\n",
              "      <td>0.001345</td>\n",
              "      <td>746.875220</td>\n",
              "      <td>0.0</td>\n",
              "      <td>70.016766</td>\n",
              "      <td>5868.824371</td>\n",
              "      <td>2018.021715</td>\n",
              "      <td>2017.844460</td>\n",
              "      <td>2018-07-08 13:52:38.590024448</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>1</td>\n",
              "      <td>5.382387e+08</td>\n",
              "      <td>3206.931814</td>\n",
              "      <td>71.439936</td>\n",
              "      <td>223552.469718</td>\n",
              "      <td>223552.469718</td>\n",
              "      <td>60.972417</td>\n",
              "      <td>10.467519</td>\n",
              "      <td>-50.504897</td>\n",
              "      <td>5.382387e+08</td>\n",
              "      <td>3206.931814</td>\n",
              "      <td>...</td>\n",
              "      <td>3.806817e+07</td>\n",
              "      <td>0</td>\n",
              "      <td>0.005845</td>\n",
              "      <td>3131.972248</td>\n",
              "      <td>0.0</td>\n",
              "      <td>71.439936</td>\n",
              "      <td>4161.353792</td>\n",
              "      <td>2018.007296</td>\n",
              "      <td>2017.821307</td>\n",
              "      <td>2018-07-12 22:22:16.957828608</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>2</td>\n",
              "      <td>5.379627e+08</td>\n",
              "      <td>7754.406586</td>\n",
              "      <td>72.679769</td>\n",
              "      <td>224362.427275</td>\n",
              "      <td>224362.427275</td>\n",
              "      <td>60.807362</td>\n",
              "      <td>11.872406</td>\n",
              "      <td>-48.934956</td>\n",
              "      <td>5.379627e+08</td>\n",
              "      <td>7754.406586</td>\n",
              "      <td>...</td>\n",
              "      <td>3.762755e+07</td>\n",
              "      <td>0</td>\n",
              "      <td>0.013971</td>\n",
              "      <td>7568.331661</td>\n",
              "      <td>0.0</td>\n",
              "      <td>72.679769</td>\n",
              "      <td>936.726605</td>\n",
              "      <td>2017.962690</td>\n",
              "      <td>2017.774142</td>\n",
              "      <td>2018-06-27 09:05:01.675995904</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>3</td>\n",
              "      <td>5.380001e+08</td>\n",
              "      <td>22307.952562</td>\n",
              "      <td>74.716754</td>\n",
              "      <td>223523.372132</td>\n",
              "      <td>223523.372132</td>\n",
              "      <td>61.143311</td>\n",
              "      <td>13.573443</td>\n",
              "      <td>-47.569868</td>\n",
              "      <td>5.380001e+08</td>\n",
              "      <td>22307.952562</td>\n",
              "      <td>...</td>\n",
              "      <td>3.766517e+07</td>\n",
              "      <td>0</td>\n",
              "      <td>0.038397</td>\n",
              "      <td>21437.898310</td>\n",
              "      <td>0.0</td>\n",
              "      <td>74.716754</td>\n",
              "      <td>82124.757101</td>\n",
              "      <td>2018.004866</td>\n",
              "      <td>2017.796901</td>\n",
              "      <td>2018-06-28 23:50:33.667710720</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>4 rows Ã— 21 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                acct_doc_header_id  actual_outstanding_amount  age_invoice  \\\n",
              "currency_score                                                               \n",
              "0                     5.381607e+08                 766.691701    70.016766   \n",
              "1                     5.382387e+08                3206.931814    71.439936   \n",
              "2                     5.379627e+08                7754.406586    72.679769   \n",
              "3                     5.380001e+08               22307.952562    74.716754   \n",
              "\n",
              "                  cust_number  cust_number_norm  cust_payment_terms  \\\n",
              "currency_score                                                        \n",
              "0               223277.282093     223277.282093           60.971518   \n",
              "1               223552.469718     223552.469718           60.972417   \n",
              "2               224362.427275     224362.427275           60.807362   \n",
              "3               223523.372132     223523.372132           61.143311   \n",
              "\n",
              "                days_past_duedate  difference        doc_id  invoice_currency  \\\n",
              "currency_score                                                                  \n",
              "0                        9.045248  -51.926270  5.381607e+08        766.691701   \n",
              "1                       10.467519  -50.504897  5.382387e+08       3206.931814   \n",
              "2                       11.872406  -48.934956  5.379627e+08       7754.406586   \n",
              "3                       13.573443  -47.569868  5.380001e+08      22307.952562   \n",
              "\n",
              "                ...    invoice_id  is_open_invoice  outstanding_amount_norm  \\\n",
              "currency_score  ...                                                           \n",
              "0               ...  3.793314e+07                0                 0.001345   \n",
              "1               ...  3.806817e+07                0                 0.005845   \n",
              "2               ...  3.762755e+07                0                 0.013971   \n",
              "3               ...  3.766517e+07                0                 0.038397   \n",
              "\n",
              "                payment_amount  total_open_amount_norm  total_time_to_clear  \\\n",
              "currency_score                                                                \n",
              "0                   746.875220                     0.0            70.016766   \n",
              "1                  3131.972248                     0.0            71.439936   \n",
              "2                  7568.331661                     0.0            72.679769   \n",
              "3                 21437.898310                     0.0            74.716754   \n",
              "\n",
              "                variance_in_outstanding_amount  year_clearance  \\\n",
              "currency_score                                                   \n",
              "0                                  5868.824371     2018.021715   \n",
              "1                                  4161.353792     2018.007296   \n",
              "2                                   936.726605     2017.962690   \n",
              "3                                 82124.757101     2018.004866   \n",
              "\n",
              "                year_of_document_create           year_of_transaction  \n",
              "currency_score                                                         \n",
              "0                           2017.844460 2018-07-08 13:52:38.590024448  \n",
              "1                           2017.821307 2018-07-12 22:22:16.957828608  \n",
              "2                           2017.774142 2018-06-27 09:05:01.675995904  \n",
              "3                           2017.796901 2018-06-28 23:50:33.667710720  \n",
              "\n",
              "[4 rows x 21 columns]"
            ]
          },
          "execution_count": 263,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "mean_days_pdd=trainn.groupby('currency_score').mean()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "BQKMRlWAAovW",
        "outputId": "9e25ac9e-1a17-4749-e057-fe7c0472f7fc"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>acct_doc_header_id</th>\n",
              "      <th>cust_number</th>\n",
              "      <th>cust_number_norm</th>\n",
              "      <th>invoice_id</th>\n",
              "      <th>total_open_amount_norm</th>\n",
              "      <th>cust_payment_terms</th>\n",
              "      <th>is_open_invoice</th>\n",
              "      <th>invoice_currency</th>\n",
              "      <th>doc_id</th>\n",
              "      <th>actual_outstanding_amount</th>\n",
              "      <th>payment_amount</th>\n",
              "      <th>days_past_duedate</th>\n",
              "      <th>age_invoice</th>\n",
              "      <th>year_clearance</th>\n",
              "      <th>year_of_document_create</th>\n",
              "      <th>difference</th>\n",
              "      <th>total_time_to_clear</th>\n",
              "      <th>variance_in_outstanding_amount</th>\n",
              "      <th>outstanding_amount_norm</th>\n",
              "      <th>invoice_currency_norm</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <td>count</td>\n",
              "      <td>4.000000e+04</td>\n",
              "      <td>40000.000000</td>\n",
              "      <td>40000.000000</td>\n",
              "      <td>4.000000e+04</td>\n",
              "      <td>40000.0</td>\n",
              "      <td>40000.000000</td>\n",
              "      <td>40000.0</td>\n",
              "      <td>40000.000000</td>\n",
              "      <td>4.000000e+04</td>\n",
              "      <td>40000.000000</td>\n",
              "      <td>40000.000000</td>\n",
              "      <td>40000.000000</td>\n",
              "      <td>40000.000000</td>\n",
              "      <td>40000.000000</td>\n",
              "      <td>40000.000000</td>\n",
              "      <td>40000.000000</td>\n",
              "      <td>40000.000000</td>\n",
              "      <td>4.000000e+04</td>\n",
              "      <td>40000.000000</td>\n",
              "      <td>40000.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>mean</td>\n",
              "      <td>5.380902e+08</td>\n",
              "      <td>223680.004675</td>\n",
              "      <td>223680.004675</td>\n",
              "      <td>3.782288e+07</td>\n",
              "      <td>0.0</td>\n",
              "      <td>60.973850</td>\n",
              "      <td>0.0</td>\n",
              "      <td>8550.713006</td>\n",
              "      <td>5.380902e+08</td>\n",
              "      <td>8550.713006</td>\n",
              "      <td>8261.412013</td>\n",
              "      <td>11.249375</td>\n",
              "      <td>72.223225</td>\n",
              "      <td>2017.999075</td>\n",
              "      <td>2017.809075</td>\n",
              "      <td>-49.724475</td>\n",
              "      <td>72.223225</td>\n",
              "      <td>2.340124e+04</td>\n",
              "      <td>0.014962</td>\n",
              "      <td>0.342351</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>std</td>\n",
              "      <td>3.750176e+06</td>\n",
              "      <td>4438.097786</td>\n",
              "      <td>4438.097786</td>\n",
              "      <td>5.717627e+06</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.459027</td>\n",
              "      <td>0.0</td>\n",
              "      <td>14618.741482</td>\n",
              "      <td>3.750176e+06</td>\n",
              "      <td>14618.741482</td>\n",
              "      <td>14324.708546</td>\n",
              "      <td>35.562671</td>\n",
              "      <td>35.564630</td>\n",
              "      <td>0.699597</td>\n",
              "      <td>0.669540</td>\n",
              "      <td>35.895598</td>\n",
              "      <td>35.564630</td>\n",
              "      <td>9.232732e+05</td>\n",
              "      <td>0.027868</td>\n",
              "      <td>0.315788</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>min</td>\n",
              "      <td>5.315170e+08</td>\n",
              "      <td>218994.000000</td>\n",
              "      <td>218994.000000</td>\n",
              "      <td>2.832879e+07</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.420000</td>\n",
              "      <td>5.315170e+08</td>\n",
              "      <td>1.420000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-52.000000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>2017.000000</td>\n",
              "      <td>2017.000000</td>\n",
              "      <td>-113.000000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>4.010777e-06</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>25%</td>\n",
              "      <td>5.352622e+08</td>\n",
              "      <td>218997.000000</td>\n",
              "      <td>218997.000000</td>\n",
              "      <td>3.274465e+07</td>\n",
              "      <td>0.0</td>\n",
              "      <td>60.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1697.575000</td>\n",
              "      <td>5.352622e+08</td>\n",
              "      <td>1697.575000</td>\n",
              "      <td>1600.000000</td>\n",
              "      <td>-1.000000</td>\n",
              "      <td>59.000000</td>\n",
              "      <td>2018.000000</td>\n",
              "      <td>2017.000000</td>\n",
              "      <td>-62.000000</td>\n",
              "      <td>59.000000</td>\n",
              "      <td>5.399699e+02</td>\n",
              "      <td>0.002583</td>\n",
              "      <td>0.021876</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>50%</td>\n",
              "      <td>5.380207e+08</td>\n",
              "      <td>226546.000000</td>\n",
              "      <td>226546.000000</td>\n",
              "      <td>3.771034e+07</td>\n",
              "      <td>0.0</td>\n",
              "      <td>60.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5055.460000</td>\n",
              "      <td>5.380207e+08</td>\n",
              "      <td>5055.460000</td>\n",
              "      <td>4879.985000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>63.000000</td>\n",
              "      <td>2018.000000</td>\n",
              "      <td>2018.000000</td>\n",
              "      <td>-58.000000</td>\n",
              "      <td>63.000000</td>\n",
              "      <td>1.814374e+03</td>\n",
              "      <td>0.007885</td>\n",
              "      <td>0.276086</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>75%</td>\n",
              "      <td>5.415025e+08</td>\n",
              "      <td>228099.000000</td>\n",
              "      <td>228099.000000</td>\n",
              "      <td>4.248373e+07</td>\n",
              "      <td>0.0</td>\n",
              "      <td>60.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>11282.442500</td>\n",
              "      <td>5.415025e+08</td>\n",
              "      <td>11282.442500</td>\n",
              "      <td>10969.945000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>68.000000</td>\n",
              "      <td>2018.000000</td>\n",
              "      <td>2018.000000</td>\n",
              "      <td>-54.000000</td>\n",
              "      <td>68.000000</td>\n",
              "      <td>3.348466e+03</td>\n",
              "      <td>0.018145</td>\n",
              "      <td>0.589785</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>max</td>\n",
              "      <td>5.445150e+08</td>\n",
              "      <td>229624.000000</td>\n",
              "      <td>229624.000000</td>\n",
              "      <td>4.926203e+07</td>\n",
              "      <td>0.0</td>\n",
              "      <td>75.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>851117.800000</td>\n",
              "      <td>5.445150e+08</td>\n",
              "      <td>851117.800000</td>\n",
              "      <td>851117.800000</td>\n",
              "      <td>558.000000</td>\n",
              "      <td>618.000000</td>\n",
              "      <td>2019.000000</td>\n",
              "      <td>2019.000000</td>\n",
              "      <td>498.000000</td>\n",
              "      <td>618.000000</td>\n",
              "      <td>1.497927e+08</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "       acct_doc_header_id    cust_number  cust_number_norm    invoice_id  \\\n",
              "count        4.000000e+04   40000.000000      40000.000000  4.000000e+04   \n",
              "mean         5.380902e+08  223680.004675     223680.004675  3.782288e+07   \n",
              "std          3.750176e+06    4438.097786       4438.097786  5.717627e+06   \n",
              "min          5.315170e+08  218994.000000     218994.000000  2.832879e+07   \n",
              "25%          5.352622e+08  218997.000000     218997.000000  3.274465e+07   \n",
              "50%          5.380207e+08  226546.000000     226546.000000  3.771034e+07   \n",
              "75%          5.415025e+08  228099.000000     228099.000000  4.248373e+07   \n",
              "max          5.445150e+08  229624.000000     229624.000000  4.926203e+07   \n",
              "\n",
              "       total_open_amount_norm  cust_payment_terms  is_open_invoice  \\\n",
              "count                 40000.0        40000.000000          40000.0   \n",
              "mean                      0.0           60.973850              0.0   \n",
              "std                       0.0            3.459027              0.0   \n",
              "min                       0.0            0.000000              0.0   \n",
              "25%                       0.0           60.000000              0.0   \n",
              "50%                       0.0           60.000000              0.0   \n",
              "75%                       0.0           60.000000              0.0   \n",
              "max                       0.0           75.000000              0.0   \n",
              "\n",
              "       invoice_currency        doc_id  actual_outstanding_amount  \\\n",
              "count      40000.000000  4.000000e+04               40000.000000   \n",
              "mean        8550.713006  5.380902e+08                8550.713006   \n",
              "std        14618.741482  3.750176e+06               14618.741482   \n",
              "min            1.420000  5.315170e+08                   1.420000   \n",
              "25%         1697.575000  5.352622e+08                1697.575000   \n",
              "50%         5055.460000  5.380207e+08                5055.460000   \n",
              "75%        11282.442500  5.415025e+08               11282.442500   \n",
              "max       851117.800000  5.445150e+08              851117.800000   \n",
              "\n",
              "       payment_amount  days_past_duedate   age_invoice  year_clearance  \\\n",
              "count    40000.000000       40000.000000  40000.000000    40000.000000   \n",
              "mean      8261.412013          11.249375     72.223225     2017.999075   \n",
              "std      14324.708546          35.562671     35.564630        0.699597   \n",
              "min          0.000000         -52.000000      8.000000     2017.000000   \n",
              "25%       1600.000000          -1.000000     59.000000     2018.000000   \n",
              "50%       4879.985000           2.000000     63.000000     2018.000000   \n",
              "75%      10969.945000           6.000000     68.000000     2018.000000   \n",
              "max     851117.800000         558.000000    618.000000     2019.000000   \n",
              "\n",
              "       year_of_document_create    difference  total_time_to_clear  \\\n",
              "count             40000.000000  40000.000000         40000.000000   \n",
              "mean               2017.809075    -49.724475            72.223225   \n",
              "std                   0.669540     35.895598            35.564630   \n",
              "min                2017.000000   -113.000000             8.000000   \n",
              "25%                2017.000000    -62.000000            59.000000   \n",
              "50%                2018.000000    -58.000000            63.000000   \n",
              "75%                2018.000000    -54.000000            68.000000   \n",
              "max                2019.000000    498.000000           618.000000   \n",
              "\n",
              "       variance_in_outstanding_amount  outstanding_amount_norm  \\\n",
              "count                    4.000000e+04             40000.000000   \n",
              "mean                     2.340124e+04                 0.014962   \n",
              "std                      9.232732e+05                 0.027868   \n",
              "min                      4.010777e-06                 0.000000   \n",
              "25%                      5.399699e+02                 0.002583   \n",
              "50%                      1.814374e+03                 0.007885   \n",
              "75%                      3.348466e+03                 0.018145   \n",
              "max                      1.497927e+08                 1.000000   \n",
              "\n",
              "       invoice_currency_norm  \n",
              "count           40000.000000  \n",
              "mean                0.342351  \n",
              "std                 0.315788  \n",
              "min                 0.000000  \n",
              "25%                 0.021876  \n",
              "50%                 0.276086  \n",
              "75%                 0.589785  \n",
              "max                 1.000000  "
            ]
          },
          "execution_count": 264,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "r2KqMhkGAovW"
      },
      "outputs": [],
      "source": [
        "#map invoice mean according to currency score\n",
        "trainn['mean_invoice']=trainn['currency_score'].map(mean_invoice)\n",
        "validation['mean_invoice']=validation['currency_score'].map(mean_invoice)\n",
        "test['mean_invoice']=test['currency_score'].map(mean_invoice)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Bj8PNokCAovW"
      },
      "outputs": [],
      "source": [
        "#the mean alone will niether will be enough,nor approppriate,there few more features will be derived from group wise\n",
        "#mean outstanding amount and mean invoice"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "4eGw4__NAovW"
      },
      "outputs": [],
      "source": [
        "#since the data has high variance,normalizing groupwise may be helpful. This way the data won't be normalized according to\n",
        "#the entire dataset and still hold the essence of its parent variables which cannot be included due to output leak"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "UvgOCt8IAovW"
      },
      "outputs": [],
      "source": [
        "#function to create features\n",
        "def feature_create(data):\n",
        "    count=data.groupby('delay_score')['acct_doc_header_id'].count()\n",
        "    data['count']=data['delay_score'].map(count)\n",
        "    data['mean_outstanding_amount']=data['delay_score'].map(mean_temp)\n",
        "    data['variance_in_outstanding_amount']=(data['actual_outstanding_amount']-data['mean_outstanding_amount'].astype(float))**2\n",
        "    data['variance_in_outstanding_amount']=data['variance_in_outstanding_amount'].astype(float)/ (data['count'].astype(float)-1)\n",
        "    #Ratio of invoice currency to mean days past due date\n",
        "    data['mean_days_past_duedate']=data['currency_score'].map('mean_days_pdd')\n",
        "    data['ratio_ic_to_mdd']=data['invoice_currency'].astype(float)/data['mean_days_past_duedate'].astype(float)\n",
        "    min_temp=data.groupby('delay_score').min()\n",
        "    min_temp['actual_outstanding_amount']\n",
        "\n",
        "    max_temp=data.groupby('delay_score').max()\n",
        "    #max_temp['actual_outstanding_amount']\n",
        "\n",
        "    max_temp_list=max_temp.actual_outstanding_amount\n",
        "    min_temp_list=min_temp.actual_outstanding_amount\n",
        "\n",
        "    data['min']=data['delay_score'].map(min_temp_list)\n",
        "    data['max']=data['delay_score'].map(max_temp_list)\n",
        "\n",
        "    data['outstanding_amount_norm']=(data['actual_outstanding_amount']-data['min'].astype(float))\n",
        "    data['outstanding_amount_norm']=(data['outstanding_amount_norm']/(data['max'].astype(float)-data['min'].astype(float)))\n",
        "    data.drop(['min','max','count'],axis=1,inplace=True)\n",
        "\n",
        "\n",
        "    min_temp=data.groupby('currency_score').min()\n",
        "\n",
        "\n",
        "    max_temp=data.groupby('currency_score').max()\n",
        "    #max_temp['actual_outstanding_amount']\n",
        "\n",
        "    max_temp_list=max_temp.invoice_currency\n",
        "    min_temp_list=min_temp.invoice_currency\n",
        "\n",
        "    data['min']=data['currency_score'].map(min_temp_list)\n",
        "    data['max']=data['currency_score'].map(max_temp_list)\n",
        "\n",
        "    data['invoice_currency_norm']=(data['invoice_currency']-data['min'].astype(float))\n",
        "    data['invoice_currency_norm']=(data['invoice_currency_norm']/(data['max'].astype(float)-data['min'].astype(float)))\n",
        "    data.drop(['min','max'],axis=1,inplace=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "pN3MN_ENAovW"
      },
      "outputs": [],
      "source": [
        "#Now,the function feature create is called and the subsets of the dataset [train,validate,test] are passed to it\n",
        "feature_create(trainn)\n",
        "feature_create(validation)\n",
        "feature_create(test)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "qEe4sgEGAovW",
        "outputId": "2445f413-1070-41ee-e666-f20a7e9db0a9"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x360 with 3 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(20, 5))\n",
        "axes[0].boxplot(trainn['invoice_currency_norm'])\n",
        "axes[0].set_xlabel('invoice_currency_norm')\n",
        "axes[1].boxplot(trainn['difference'])\n",
        "axes[1].set_xlabel('difference')\n",
        "axes[2].boxplot(trainn['variance_in_outstanding_amount'])\n",
        "axes[2].set_xlabel('variance_in_outstanding_amount')\n",
        "\n",
        "fig.tight_layout()\n",
        "#we can now see how the outliers have reduced in invoice currency norm according to group wise normalization\n",
        "#(normalized according to invoice currency score)\n",
        "#In my opinion not all outlier need to or should be removed. Many times outliers can indicate patterns that we may miss\n",
        "#for example days past due date or any other feature may vary between years,invoice currency and many other factors.Some\n",
        "#times the outliers are related to the other data in the row."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WcGR1B6AAovW"
      },
      "source": [
        "All features created are :"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "M6uH6rUPAovW",
        "outputId": "6926156a-df90-40c6-c02e-44f99ebef493"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "['year_of_transaction',\n",
              " 'year_clearance',\n",
              " 'year_of_document_create',\n",
              " 'difference',\n",
              " 'delay_score',\n",
              " 'currency_score',\n",
              " 'total_time_to_clear',\n",
              " 'mean_invoice',\n",
              " 'mean_outstanding_amount',\n",
              " 'variance_in_outstanding_amount',\n",
              " 'outstanding_amount_norm',\n",
              " 'invoice_currency_norm']"
            ]
          },
          "execution_count": 271,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "created_features=['year_of_transaction', 'year_clearance',\n",
        "       'year_of_document_create', 'difference', 'delay_score',\n",
        "       'currency_score', 'total_time_to_clear', 'mean_invoice',\n",
        "       'mean_outstanding_amount', 'variance_in_outstanding_amount',\n",
        "       'outstanding_amount_norm', 'invoice_currency_norm']\n",
        "created_features"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "qmEXOWAJAovW"
      },
      "source": [
        "# Feature Selection"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "61koUL1nAovW"
      },
      "outputs": [],
      "source": [
        "#The given problem is a regression problem so a regression model is necessary when features are selected using any other\n",
        "#algorithm, Here Recurssive Feature Elimination is used to find feature importance as it is a wrapper method.Not only that,\n",
        "#among the other forward and backward wrapper methods, RFE considers every possible subset of features."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "vAfIOQxOAovW"
      },
      "outputs": [],
      "source": [
        "#Here a Boosting algorithm is used instead of Bagging or Iteration. Boosting algorithms are sequential in the manner that\n",
        "#the pattern observed in the iterations are passed to the next iteration. The error in predicted and actual value in first\n",
        "#iteration is added to the predicted value and passed to the subsequent and so on making the learning of the algorithm more\n",
        "#efficient."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "-jvk4h-XAovW"
      },
      "outputs": [],
      "source": [
        "#defining a features list,this list contains all the columns that do not have leaks to the target variable : payment_amount,\n",
        "#especially not payment account as never can the target variable be included in feature list.Dates are also not included\n",
        "features=['cust_payment_terms',\n",
        "       'is_open_invoice','days_past_duedate',\n",
        "       'age_invoice',     'year_clearance'    ,\n",
        "       'year_of_document_create',    'difference', 'delay_score',\n",
        "        'currency_score',  'total_time_to_clear', 'mean_invoice',\n",
        "       'mean_outstanding_amount',    'variance_in_outstanding_amount',\n",
        "       'outstanding_amount_norm', 'invoice_currency_norm']\n",
        "target='payment_amount'"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "yfhWKbRwAovW",
        "outputId": "90dc1379-e619-4e71-b57f-da2a8a7c0ae5"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[False False False False False False False False  True False  True False\n",
            "  True False  True]\n",
            "[10 12  3  5 11  9  6  4  1  8  1  7  1  2  1]\n"
          ]
        }
      ],
      "source": [
        "from sklearn.feature_selection import RFE\n",
        "from sklearn.ensemble import GradientBoostingRegressor\n",
        "\n",
        "model = GradientBoostingRegressor()\n",
        "# create the RFE model and select 5 attributes\n",
        "\n",
        "rfe = RFE(model, 4)\n",
        "rfe = rfe.fit(trainn[features],trainn[target])\n",
        "# summarize the selection of the attributes\n",
        "print(rfe.support_)\n",
        "print(rfe.ranking_)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ulRwl6o6AovX"
      },
      "outputs": [],
      "source": [
        "#According to the above results, the features should be\n",
        "features=['variance_in_outstanding_amount','outstanding_amount_norm','invoice_currency_norm',\n",
        "          'currency_score','delay_score']\n",
        "target='payment_amount'"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "OWNVH3AHAovX"
      },
      "outputs": [],
      "source": [
        "#this is the final feature set for the prediction,more than 4 most important feature subset and less than it have resulted\n",
        "#in higher error"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Cx2Znqa3AovX"
      },
      "outputs": [],
      "source": [
        "from sklearn.metrics import mean_absolute_error\n",
        "from sklearn.metrics import make_scorer\n",
        "\n",
        "mse = make_scorer(mean_absolute_error, greater_is_better=False)\n",
        "from mlxtend.feature_selection import ExhaustiveFeatureSelector as EFS\n",
        "xgtrain = xgb.DMatrix(trainn[features].values, label=trainn[target].values)\n",
        "model = xgb.XGBRegressor(n_estimators=100,num_parallel_tree=1,random_state=50,subsample=0.5,eval_metric='rmse',max_depth=3,\n",
        "                        learning_rate=0.01)\n",
        "\n",
        "efs1 = EFS(model,\n",
        "           min_features=1,\n",
        "           max_features=5,\n",
        "           scoring='neg_mean_squared_error',\n",
        "           print_progress=True,\n",
        "           cv=5)\n",
        "\n",
        "efs1 = efs1.fit(trainn[x],trainn[target])\n",
        "\n",
        "print('Best subset (corresponding names):', efs1.best_feature_names_)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "_IO8U6ASAovX"
      },
      "outputs": [],
      "source": [
        "#the above algorithm took hours to present an output so I am not running it on this notebook, it selected the following:\n",
        "#Best subset (corresponding names): ('cust_payment_terms', 'invoice_currency_norm', 'mean_invoice'),we can include this in"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "tawnQtPqAovX"
      },
      "outputs": [],
      "source": [
        "feature2=['cust_payment_terms', 'invoice_currency_norm', 'mean_invoice']"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "MlfB9iHAAovX"
      },
      "source": [
        "# Modelling"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "DTVvJK1-AovX"
      },
      "outputs": [],
      "source": [
        "#The given problem statement is clearly a regression problem, a regression model needs to be used. Here XGBoost that is\n",
        "#ExtraGradientBoost is used. The essential difference between the two is that xgboost uses the computer's resources more\n",
        "#efficiently like memory etc."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "x2NMW1aoAovX",
        "outputId": "ae39da86-268b-497e-84a9-3ce15897a9de"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "XGBRegressor(base_score=0.5, booster=None, colsample_bylevel=1,\n",
              "             colsample_bynode=1, colsample_bytree=1, eval_metric='rmse',\n",
              "             gamma=0, gpu_id=-1, importance_type='gain',\n",
              "             interaction_constraints=None, learning_rate=0.01, max_delta_step=0,\n",
              "             max_depth=3, min_child_weight=1, missing=nan,\n",
              "             monotone_constraints=None, n_estimators=100, n_jobs=0,\n",
              "             num_parallel_tree=1, objective='reg:squarederror', random_state=55,\n",
              "             reg_alpha=0, reg_lambda=1, scale_pos_weight=1,\n",
              "             scoring=make_scorer(mean_squared_error), subsample=0.3,\n",
              "             tree_method=None, validate_parameters=False, verbosity=None)"
            ]
          },
          "execution_count": 299,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "from sklearn.metrics import make_scorer,mean_squared_error\n",
        "import xgboost as xgb\n",
        "xgtrain = xgb.DMatrix(trainn[features].values, label=trainn[target].values)\n",
        "model_xgb= xgb.XGBRegressor(n_estimators=100,random_state=55,subsample=0.3,eval_metric='rmse',max_depth=3,learning_rate=0.01,\n",
        "                        scoring=make_scorer(mean_squared_error))\n",
        "model_xgb.fit(trainn[features].astype(float),trainn[target])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "qUhOlqFFAovX"
      },
      "outputs": [],
      "source": [
        "#we predict the values of the validation payment amount\n",
        "valid_pred = model_xgb.predict(validation[features].astype(float))"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Pd5fT7oPAovX"
      },
      "source": [
        "Using Another Model, LightGBM. Light GBM is faster and splits the nodes leaf wise instead of depth wise like xgboost. I will aplly it on my train dataset to see how it is working with it"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "RtpsUwOmAovX"
      },
      "outputs": [],
      "source": [
        "import lightgbm as lgb\n",
        "params = {\n",
        "    'boosting_type': 'gbdt',\n",
        "    'objective': 'regression',\n",
        "    'metric': 'rmse',\n",
        "    'max_depth': 2,\n",
        "    'learning_rate': 0.01,\n",
        "    'verbose': 0,\n",
        "    }\n",
        "n_estimators = 100\n",
        "d_train = lgb.Dataset(trainn[features], label=trainn[target])\n",
        "d_valid = lgb.Dataset(validation[features], label=validation[target])\n",
        "\n",
        "model = lgb.train(params, d_train, n_estimators, d_valid, verbose_eval=0)\n",
        "\n",
        "preds = model.predict(validation[features])"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CO_KceJVAovX"
      },
      "source": [
        "# Model Evaluation"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "emaQQb7qAovX",
        "outputId": "771185ee-3698-4e99-bb35-4a785ae07f50"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Root Mean Square Error xgboost:  5635.111592264583\n",
            "Root Mean Square Error lightgbm:  9793.976293192787\n"
          ]
        }
      ],
      "source": [
        "from sklearn.metrics import mean_squared_error,mean_squared_log_error,r2_score\n",
        "from math import sqrt\n",
        "\n",
        "#root mean square root error depicts how much predicted values differ from the actual values.The rmse depends on the value\n",
        "#of the column.\n",
        "rmse1 = sqrt(mean_squared_error(validation[target], valid_pred))\n",
        "rmse2 = sqrt(mean_squared_error(validation[target], preds))\n",
        "print('Root Mean Square Error xgboost: ',rmse1)\n",
        "print('Root Mean Square Error lightgbm: ',rmse2)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "yD9bPqCPAovX",
        "outputId": "05a4ac56-bbf8-4f68-b708-b7895fd2d602"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Root Mean Square Log Error xgboost:  0.617506596718192\n",
            "Root Mean Square Log Error lightgbm:  9793.976293192787\n"
          ]
        }
      ],
      "source": [
        "#root mean square root error depicts how much predicted values differ from the mean too however in this difference of log of\n",
        "#predicted and actual values are taken. The log may contribute in reducing the variance.\n",
        "rmsle1=sqrt(mean_squared_log_error(validation[target], valid_pred))\n",
        "rmsle2= sqrt(mean_squared_error(validation[target], preds))\n",
        "print('Root Mean Square Log Error xgboost: ',rmsle1)\n",
        "print('Root Mean Square Log Error lightgbm: ',rmsle2)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "7DQpj21CAovX",
        "outputId": "e21cd943-792b-417a-9dfe-1227bf585c8d"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "R2 Score xgboost:  0.6891660254298315\n",
            "R2 Score lightgbm:  0.061052009170945776\n"
          ]
        }
      ],
      "source": [
        "#r2 square. This shows how close the predicted values are to the actual values.\n",
        "r2score1=r2_score(validation[target], valid_pred)\n",
        "r2score2=r2_score(validation[target], preds)\n",
        "print('R2 Score xgboost: ',r2score1)\n",
        "print('R2 Score lightgbm: ',r2score2)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "BjPIniQ9AovY"
      },
      "outputs": [],
      "source": [
        "#Since LightGBM did not perform as well with the given features as XGBoost, we use results from xgboost"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "yaEGcdSdAovY"
      },
      "outputs": [],
      "source": [
        "#predicting the values of the first partial payment for those businesses who have not made their payment.\n",
        "partial_payment_pred=model_xgb.predict(test[features].astype(float))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "UqtTr1lyAovY"
      },
      "outputs": [],
      "source": [
        "predicted_partial_payment=test"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "UMDWYttRAovY"
      },
      "outputs": [],
      "source": [
        "predicted_partial_payment['first_partial_payment']=partial_payment_pred"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "jQYaW7cIAovY",
        "outputId": "70da2e21-1358-487e-bfbd-1cbe2778f5d9"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>invoice_currency</th>\n",
              "      <th>acct_doc_header_id</th>\n",
              "      <th>business_code</th>\n",
              "      <th>cust_number</th>\n",
              "      <th>first_partial_payment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <td>43842</td>\n",
              "      <td>17805.26</td>\n",
              "      <td>545383946</td>\n",
              "      <td>Piat8</td>\n",
              "      <td>219001</td>\n",
              "      <td>13904.417969</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>43843</td>\n",
              "      <td>12901.79</td>\n",
              "      <td>544964371</td>\n",
              "      <td>enme9</td>\n",
              "      <td>218996</td>\n",
              "      <td>10565.639648</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>43844</td>\n",
              "      <td>25911.53</td>\n",
              "      <td>545128156</td>\n",
              "      <td>Piat8</td>\n",
              "      <td>219001</td>\n",
              "      <td>21853.882812</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>43845</td>\n",
              "      <td>26145.37</td>\n",
              "      <td>544833387</td>\n",
              "      <td>LERP4</td>\n",
              "      <td>228446</td>\n",
              "      <td>22090.070312</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <td>43846</td>\n",
              "      <td>13617.31</td>\n",
              "      <td>533024585</td>\n",
              "      <td>HYON10</td>\n",
              "      <td>228140</td>\n",
              "      <td>11103.152344</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "       invoice_currency  acct_doc_header_id business_code  cust_number  \\\n",
              "43842          17805.26           545383946         Piat8       219001   \n",
              "43843          12901.79           544964371         enme9       218996   \n",
              "43844          25911.53           545128156         Piat8       219001   \n",
              "43845          26145.37           544833387         LERP4       228446   \n",
              "43846          13617.31           533024585        HYON10       228140   \n",
              "\n",
              "       first_partial_payment  \n",
              "43842           13904.417969  \n",
              "43843           10565.639648  \n",
              "43844           21853.882812  \n",
              "43845           22090.070312  \n",
              "43846           11103.152344  "
            ]
          },
          "execution_count": 305,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "show[['invoice_currency','acct_doc_header_id',\n",
        "'business_code',\n",
        "'cust_number','first_partial_payment']].head()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5MIJcHxBAovY"
      },
      "source": [
        "The First Partial Payments is Predicted"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "lIby5KGGAovY"
      },
      "source": [
        "Thank You"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.4"
    },
    "colab": {
      "provenance": []
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
